The ``0-add_integer.py` module
======================

Using ``add_integer``
-------------------

This is a text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer.py`` module:

    >>> add_integer = __import__("0-add_integer").add_integer

Now use it:

    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(90)
    188

    >>> add_integer(2, 90)
    92

    >>> add_integer(-2, -90)
    -92

    >>> add_integer(2, -90)
    -88

    >>> add_integer(-2, 90)
    88

    >>> add_integer(2.1, 90.3)
    92

    >>> add_integer(-2.1, -90.3)
    -92

    >>> add_integer(-2.1, 90.3)
    88

    >>> add_integer(2.1, -90.3)
    -88

    >>> add_integer("str", 1)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(2, "str")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(float("inf"), 1)
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(1, float("inf"))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(10.7, lambda a: a)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(lambda a: a, 10.7)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(2.5, "12")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer("12", 2.5)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer("12", "12")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer((1, 2), 3)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer((1, 2), (3, 4))
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(1, (2, 3))
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(None, 1)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(None, None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(1, None)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(True)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(False)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(1, True)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(1, False)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(True, True)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(False, False)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
